// import type { Core } from '@strapi/strapi';

export default {
  /**
   * An asynchronous register function that runs before
   * your application is initialized.
   *
   * This gives you an opportunity to extend code.
   */
  register(/* { strapi }: { strapi: Core.Strapi } */) {},

  /**
   * An asynchronous bootstrap function that runs before
   * your application gets started.
   *
   * This gives you an opportunity to set up your data model,
   * run jobs, or perform some special logic.
   */
  bootstrap({ strapi }) {
    // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º email —Å–µ—Ä–≤–∏—Å
    strapi.eventHub.on('strapi::ready', () => {
      console.log('üîß EMAIL-FIX: –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º email —Å–µ—Ä–≤–∏—Å...');
      
      // –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –æ—Ç–ø—Ä–∞–≤–∫–∏
      const originalSend = strapi.plugins['email'].services.email.send;
      
      // –ü–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –º–µ—Ç–æ–¥ send
      strapi.plugins['email'].services.email.send = async function(options) {
        console.log('üìß EMAIL-FIX: –ü–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É email');
        console.log('üìß EMAIL-FIX: –û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π from:', options.from);
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–º–µ–Ω—è–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        const correctFrom = process.env.SMTP_USERNAME;
        if (correctFrom) {
          options.from = correctFrom;
          options.replyTo = correctFrom;
          console.log('üìß EMAIL-FIX: –ó–∞–º–µ–Ω–∏–ª–∏ from –Ω–∞:', correctFrom);
        }
        
        // –í—ã–∑—ã–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–º–∏ –æ–ø—Ü–∏—è–º–∏
        return originalSend.call(this, options);
      };
      
      console.log('‚úÖ EMAIL-FIX: Email —Å–µ—Ä–≤–∏—Å –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω!');
    });
  },
}; 