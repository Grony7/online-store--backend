import { factories } from '@strapi/strapi';
import utils from '@strapi/utils';
import crypto from 'crypto';

const { ApplicationError, ValidationError } = utils.errors;

export default factories.createCoreController('plugin::users-permissions.user', ({ strapi }) => ({
  async forgotPassword(ctx) {
    const { email } = ctx.request.body;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ email —É–∫–∞–∑–∞–Ω
    if (!email) {
      throw new ValidationError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å email');
    }

    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º email
    const normalizedEmail = email.toLowerCase();

    try {
      // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      const user = await strapi.query('plugin::users-permissions.user').findOne({
        where: { email: normalizedEmail },
      });

      if (!user) {
        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω (–±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å)
        return ctx.send({ ok: true });
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω
      if (user.blocked) {
        throw new ApplicationError('–ê–∫–∫–∞—É–Ω—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω');
      }

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω —Å–±—Ä–æ—Å–∞ –ø–∞—Ä–æ–ª—è
      const resetPasswordToken = crypto.randomBytes(64).toString('hex');

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      await strapi.query('plugin::users-permissions.user').update({
        where: { id: user.id },
        data: { resetPasswordToken },
      });

      // –ü–æ–ª—É—á–∞–µ–º –±–∞–∑–æ–≤—ã–π URL –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
      const baseUrl = process.env.FRONTEND_URL || 'http://localhost:3000';
      const resetUrl = `${baseUrl}/reset-password?code=${resetPasswordToken}`;

      // –ü–æ–ª—É—á–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –∞–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
      const fromEmail = process.env.SMTP_USERNAME;
      
      if (!fromEmail) {
        throw new ApplicationError('SMTP_USERNAME –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
      }

      console.log(`üìß –ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ —Å ${fromEmail} –Ω–∞ ${user.email}`);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º email —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
      await strapi.plugins['email'].services.email.send({
        to: user.email,
        from: fromEmail, // —è–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è
        replyTo: fromEmail, // —Ç–∞–∫–∂–µ —É–∫–∞–∑—ã–≤–∞–µ–º reply-to
        subject: '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è',
        html: `
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</title>
          </head>
          <body style="font-family: Arial, sans-serif; line-height: 1.6; color: #333;">
            <div style="max-width: 600px; margin: 0 auto; padding: 20px;">
              <h1 style="color: #2c5282;">–í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è</h1>
              
              <p>–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, ${user.name || user.username}!</p>
              
              <p>–í—ã –∑–∞–ø—Ä–æ—Å–∏–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –¥–ª—è –≤–∞—à–µ–π —É—á–µ—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏.</p>
              
              <div style="background: #f7fafc; padding: 20px; border-radius: 8px; margin: 20px 0;">
                <p>–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ –ø–∞—Ä–æ–ª—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:</p>
                <p><a href="${resetUrl}" style="color: #2c5282; text-decoration: none; font-weight: bold;">${resetUrl}</a></p>
              </div>

              <p style="color: #666; font-size: 14px;">
                –ï—Å–ª–∏ –≤—ã –Ω–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞–ª–∏ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ —ç—Ç–æ –ø–∏—Å—å–º–æ.
                –°—Å—ã–ª–∫–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞ –≤ —Ç–µ—á–µ–Ω–∏–µ 1 —á–∞—Å–∞.
              </p>
              
              <p>–° —É–≤–∞–∂–µ–Ω–∏–µ–º,<br>–ö–æ–º–∞–Ω–¥–∞ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–º–∞–≥–∞–∑–∏–Ω–∞</p>
            </div>
          </body>
          </html>
        `,
      });

      console.log(`‚úÖ EMAIL: –ü–∏—Å—å–º–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å ${fromEmail} –Ω–∞ ${user.email}`);
      return ctx.send({ ok: true });

    } catch (error) {
      console.error('‚ùå EMAIL: –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è:', error);
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ SMTP
      if (error.message) {
        if (error.message.includes('user not found') || error.message.includes('Sender address rejected')) {
          console.error('‚ùå SMTP: –ü—Ä–æ–±–ª–µ–º–∞ —Å –∞–¥—Ä–µ—Å–æ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ SMTP_USERNAME –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
          console.error('‚ùå SMTP: –¢–µ–∫—É—â–∏–π SMTP_USERNAME:', process.env.SMTP_USERNAME);
        }
      }
      
      throw new ApplicationError('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–∏—Å—å–º–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –ø–∞—Ä–æ–ª—è');
    }
  },

  async resetPassword(ctx) {
    const { code, password, passwordConfirmation } = ctx.request.body;

    if (!code || !password || !passwordConfirmation) {
      throw new ValidationError('–ù–µ–æ–±—Ö–æ–¥–∏–º–æ —É–∫–∞–∑–∞—Ç—å –∫–æ–¥, –ø–∞—Ä–æ–ª—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è');
    }

    if (password !== passwordConfirmation) {
      throw new ValidationError('–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç');
    }

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —Ç–æ–∫–µ–Ω—É
    const user = await strapi.query('plugin::users-permissions.user').findOne({
      where: { resetPasswordToken: code },
    });

    if (!user) {
      throw new ValidationError('–ù–µ–≤–µ—Ä–Ω—ã–π –∏–ª–∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–π –∫–æ–¥ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è');
    }

    // –û–±–Ω–æ–≤–ª—è–µ–º –ø–∞—Ä–æ–ª—å –∏ –æ—á–∏—â–∞–µ–º —Ç–æ–∫–µ–Ω
    await strapi.query('plugin::users-permissions.user').update({
      where: { id: user.id },
      data: {
        password,
        resetPasswordToken: null,
      },
    });

    console.log(`‚úÖ PASSWORD: –ü–∞—Ä–æ–ª—å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${user.email}`);
    
    return ctx.send({
      jwt: strapi.plugins['users-permissions'].services.jwt.issue({
        id: user.id,
      }),
      user: await strapi.entityService.findOne('plugin::users-permissions.user', user.id),
    });
  },
})); 